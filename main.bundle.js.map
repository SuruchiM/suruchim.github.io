{"version":3,"sources":["C:/BainCodeChallenge/Code/ProviderData/src/$_lazy_route_resource lazy","C:/BainCodeChallenge/Code/ProviderData/src/app/app.component.css","C:/BainCodeChallenge/Code/ProviderData/src/app/app.component.html","C:/BainCodeChallenge/Code/ProviderData/src/app/app.component.ts","C:/BainCodeChallenge/Code/ProviderData/src/app/app.module.ts","C:/BainCodeChallenge/Code/ProviderData/src/app/login.service.ts","C:/BainCodeChallenge/Code/ProviderData/src/app/provider-data.service.ts","C:/BainCodeChallenge/Code/ProviderData/src/environments/environment.ts","C:/BainCodeChallenge/Code/ProviderData/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BainCodeChallenge/Code/ProviderData/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.NumberInput\\r\\n{\\r\\n    color: gray;\\r\\n    width: 60%;\\r\\n}\\r\\n\\r\\n.Input{\\r\\n    width: 60%;\\r\\n}\\r\\n\\r\\n.FixedHeader_DataGrid\\r\\n{\\r\\n    border: 1px solid lightblue;\\r\\n    \\r\\n}\\r\\n\\r\\n.SearchDiv\\r\\n{\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.DataGrid{\\r\\n    border: 1px solid lightblue;    \\r\\n}\\r\\n\\r\\n.GridHeader{\\r\\n    border: 0px solid lightblue;\\r\\n    font: caption;\\r\\n    background-color: lightblue;\\r\\n    overflow-y: hidden;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.GridBody\\r\\n{\\r\\n    border: 0px solid black;\\r\\n    font-size: 11px;\\r\\n}\\r\\n\\r\\n.CellStyle{\\r\\n    font-size: 11px;\\r\\n    border: 0px solid black;\\r\\n}\\r\\n\\r\\n.Login{\\r\\n    -ms-flex-item-align: center;\\r\\n        align-self: center;\\r\\n}\\r\\n\\r\\n.Default{\\r\\n    background-color: red;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BainCodeChallenge/Code/ProviderData/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center;\\\" [hidden]=\\\"isAuthenticated\\\" >\\n  <h2>\\n    Welcome to {{ title }}!\\n  </h2>\\n  <img src=\\\"assets\\\\medical-background.png\\\" alt=\\\"test\\\" style=\\\"width:100%\\\">\\n  \\n</div>\\n<body>\\n    <div [hidden]=\\\"isAuthenticated\\\" style=\\\"text-align:center\\\">\\n        <table class =\\\"DataGrid\\\">\\n          <tr>\\n            <td><label id=\\\"lblUserName\\\" for=\\\"txtUserName\\\">UserName</label></td>\\n            <td><input id=\\\"txtPassword\\\" type=\\\"text\\\" [(ngModel)]=\\\"userName\\\" required=\\\"required\\\"/></td>\\n          </tr>\\n          <tr>\\n              <td><label id=\\\"lblPassword\\\" for=\\\"txtPassword\\\">Password</label></td>\\n              <td><input id=\\\"txtPassword\\\" type=\\\"text\\\" [(ngModel)]=\\\"userPassword\\\" required=\\\"required\\\"/></td>\\n          </tr>\\n          <tr>\\n            <button id= \\\"btnLogin\\\" (click)=\\\"Login()\\\">Login</button>\\n          </tr>\\n        </table>   \\n  </div>\\n  <div [hidden]=\\\"!isAuthenticated\\\">\\n    <div style=\\\"color: blue\\\">Welcome <b>{{userName}} !</b>&nbsp; Select the Filter Criterias to Search the Providers.\\n    </div>\\n    <br/>\\n    <div>\\n      <table class=\\\"SearchDiv\\\"><tr><td>\\n    <table >\\n      <tr>\\n        <td>\\n          Discharges:&nbsp;\\n        </td>\\n        <td>\\n            <input id=\\\"txtMinDischarges\\\" type=\\\"text\\\"  placeholder = \\\"<<Min>>\\\" class=\\\"Input\\\" [(ngModel)]=\\\"minDischarges\\\" (change)=\\\"CheckValue('minDischarges')\\\"/>\\n        </td>\\n        <td>\\n            <input id=\\\"txtMaxDischarges\\\" type=\\\"text\\\"  placeholder = \\\"<<Max>>\\\" class=\\\"Input\\\" [(ngModel)]=\\\"maxDischarges\\\" (change)=\\\"CheckValue('maxDischarges')\\\"/>\\n        </td>\\n      </tr>\\n      <tr>\\n          <td>\\n            Average Covered Charges:&nbsp;\\n          </td>\\n          <td>\\n              <input id=\\\"txtMinAvgCoveredCharges\\\" type=\\\"text\\\"  placeholder = \\\"<<Min>>\\\" class=\\\"Input\\\" [(ngModel)]=\\\"minAvgCoveredCharges\\\" (change)=\\\"CheckValue('minAvgCoveredCharges')\\\"/>\\n          </td>\\n          <td>\\n              <input id=\\\"txtMaxAvgCoveredCharges\\\" type=\\\"text\\\" placeholder = \\\"<<Max>>\\\" class=\\\"Input\\\" [(ngModel)]=\\\"maxAvgCoveredCharges\\\" (change)=\\\"CheckValue('maxAvgCoveredCharges')\\\"/>\\n          </td>\\n        </tr>\\n        <tr>\\n            <td>\\n              Average Medicare Payments:&nbsp;\\n            </td>\\n            <td>\\n                <input id=\\\"txtMinAvgMedicarePayments\\\" type=\\\"text\\\"  placeholder = \\\"<<Min>>\\\" class=\\\"Input\\\" [(ngModel)]=\\\"minAvgMedicarePayments\\\" (change)=\\\"CheckValue('minAvgMedicarePayments')\\\"/>\\n            </td>\\n            <td>\\n                <input id=\\\"txtMaxAvgMedicarePayments\\\" type=\\\"text\\\"  placeholder = \\\"<<Max>>\\\" class=\\\"Input\\\" [(ngModel)]=\\\"maxAvgMedicarePayments\\\" (change)=\\\"CheckValue('maxAvgMedicarePayments')\\\"/>\\n            </td>\\n          </tr>\\n          <tr>\\n              <td>\\n                State:&nbsp;\\n              </td>\\n              <td>\\n                  <input id=\\\"txtState\\\" type=\\\"text\\\"  value = \\\"\\\" class=\\\"Input\\\" [(ngModel)]=\\\"state\\\"/>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <button id= \\\"btnSearch\\\" (click)=\\\"SearchClick()\\\">Search</button>\\n                &nbsp;\\n                  <button id= \\\"btnReset\\\" (click)=\\\"ResetClick()\\\">Reset</button>\\n                </td>\\n            </tr>\\n    </table></td>\\n    <td>\\n      <table>\\n        <tr>\\n          <td>\\n             Select List of Columns to be displayed in the grid:\\n          </td>\\n        </tr>\\n        <tr>\\n            <td> <input type=\\\"checkbox\\\" checked = \\\"checked\\\"  (click) = \\\"CheckboxSelection('Provider Name')\\\">Provider Name</td>\\n            <td> <input type=\\\"checkbox\\\" checked=\\\"checked\\\" (click) = \\\"CheckboxSelection('Provider Street Address')\\\">Provider Street Address</td>\\n            <td> <input type=\\\"checkbox\\\" checked=\\\"checked\\\" (click) = \\\"CheckboxSelection('Provider City')\\\">Provider City</td>\\n        </tr>\\n        <tr>\\n            <td> <input type=\\\"checkbox\\\" checked=\\\"checked\\\" (click) = \\\"CheckboxSelection('Provider State')\\\">Provider State</td>\\n            <td> <input type=\\\"checkbox\\\" checked=\\\"checked\\\" (click) = \\\"CheckboxSelection('Provider Zip Code')\\\">Provider Zip Code</td>\\n            <td> <input type=\\\"checkbox\\\" checked=\\\"checked\\\" (click) = \\\"CheckboxSelection('Hospital Referral Region Description')\\\">Hospital Referral Region Description</td>\\n        </tr>\\n        <tr>\\n            <td> <input type=\\\"checkbox\\\" checked=\\\"checked\\\" (click) = \\\"CheckboxSelection('Total Discharges')\\\">Total Discharges</td>\\n            <td> <input type=\\\"checkbox\\\" checked=\\\"checked\\\" (click) = \\\"CheckboxSelection('Average Covered Charges')\\\">Average Covered Charges</td>\\n            <td> <input type=\\\"checkbox\\\" checked=\\\"checked\\\" (click) = \\\"CheckboxSelection('Average Total Payments')\\\">Average Total Payments</td>\\n        </tr>\\n        <tr>\\n            <td> <input type=\\\"checkbox\\\" checked=\\\"checked\\\" (click) = \\\"CheckboxSelection('Average Medicare Payments')\\\">Average Medicare Payments</td>\\n        </tr>\\n      </table>\\n    </td>\\n    </tr>\\n      </table>\\n  </div>\\n  <div style=\\\"text-align:center\\\" [hidden] = \\\"isResultsLoaded\\\">\\n    <img src=\\\"assets\\\\spinner.gif\\\" alt=\\\"Loading Search Results\\\" style=\\\"width:4%\\\">\\n  </div>\\n    <div >\\n      <table class=\\\"DataGrid\\\" style=\\\"height:400px;display:block;overflow:scroll\\\">\\n        <thead class=\\\"GridHeader\\\">\\n          <tr>\\n              <th *ngFor=\\\"let data of displayColumns\\\">{{data.DisplayName}}</th>\\n          </tr>\\n        </thead>\\n        <tbody class=\\\"GridBody\\\">\\n          <tr *ngFor= \\\"let data of gridData\\\">\\n              <td class =\\\"CellStyle\\\" *ngFor=\\\"let displayCols of displayColumns\\\">{{data[displayCols.Key]}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      </div>\\n      <div style=\\\"text-align:right\\\">\\n        <button type=\\\"button\\\" (click) = \\\"PageLinkClick('first')\\\" >first</button>\\n        <button type=\\\"button\\\" (click) = \\\"PageLinkClick('prev')\\\" >prev</button>\\n        <button type=\\\"button\\\" (click) = \\\"PageLinkClick('next')\\\" >next</button>\\n        <button type=\\\"button\\\" (click) = \\\"PageLinkClick('last')\\\" >last</button>\\n        Total Records : {{providerDataAll.length}}\\n        </div>\\n  </div>\\n</body>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BainCodeChallenge/Code/ProviderData/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { ProviderDataService } from './provider-data.service';\nimport { LoginService } from './login.service';\nimport {HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { parse } from 'querystring';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'National HealthCare Provider';\n  minDischarges : any;\n  maxDischarges : any;\n  minAvgCoveredCharges : any;\n  maxAvgCoveredCharges : any;\n  minAvgMedicarePayments : any;\n  maxAvgMedicarePayments : any;\n  userName :string;\n  userPassword: string;\n  state : string;\n  isAuthenticated : Boolean = false;\n  isResultsLoaded : Boolean = true; \n  columnAll : any[];\n  displayColumns : any[];\n  userData;\n  providerDataAll : any[];\n  currentPage : number;\n  lastPage : number;\n  gridPageSize : number = parseInt(environment.pageSize);\n  displayOptions : any[];\n\n  constructor(private _providerDataService: ProviderDataService, private _loginService: LoginService)\n  {\n    this.columnAll = [\n      {\"DisplayName\": \"Provider Name\", \"Key\":\"Provider Name\"},\n      {\"DisplayName\": \"Provider Street Address\", \"Key\":\"Provider Street Address\"},\n      {\"DisplayName\": \"Provider City\", \"Key\":\"Provider City\"},\n      {\"DisplayName\": \"Provider State\", \"Key\":\"Provider State\"},\n      {\"DisplayName\": \"Provider Zip Code\", \"Key\":\"Provider Zip Code\"},\n      {\"DisplayName\": \"Hospital Referral Region Description\", \"Key\":\"Hospital Referral Region Description\"},\n      {\"DisplayName\": \"Total Discharges\", \"Key\":\"Total Discharges\"},\n      {\"DisplayName\": \"Average Covered Charges\", \"Key\":\"Average Covered Charges\"},\n      {\"DisplayName\": \"Average Total Payments\", \"Key\":\"Average Total Payments\"},\n      {\"DisplayName\": \"Average Medicare Payments\", \"Key\":\"Average Medicare Payments\"}\n    ];\n\n    this.displayColumns = [\n      {\"DisplayName\": \"Provider Name\", \"Key\":\"Provider Name\"},\n      {\"DisplayName\": \"Provider Street Address\", \"Key\":\"Provider Street Address\"},\n      {\"DisplayName\": \"Provider City\", \"Key\":\"Provider City\"},\n      {\"DisplayName\": \"Provider State\", \"Key\":\"Provider State\"},\n      {\"DisplayName\": \"Provider Zip Code\", \"Key\":\"Provider Zip Code\"},\n      {\"DisplayName\": \"Hospital Referral Region Description\", \"Key\":\"Hospital Referral Region Description\"},\n      {\"DisplayName\":\"Total Discharges\", \"Key\":\"Total Discharges\"},\n      {\"DisplayName\": \"Average Covered Charges\", \"Key\":\"Average Covered Charges\"},\n      {\"DisplayName\": \"Average Total Payments\", \"Key\":\"Average Total Payments\"},\n      {\"DisplayName\": \"Average Medicare Payments\", \"Key\":\"Average Medicare Payments\"}\n    ];\n\n    this.displayOptions =[\n      {\"All\": true},\n      {\"Provider Name\": true},\n      {\"Provider Street Address\": true},\n      {\"Provider City\": true},\n      {\"Provider State\": true},\n      {\"Provider Zip Code\": true},\n      {\"Hospital Referral Region Description\": true},\n      {\"Total Discharges\": true},\n      {\"Average Covered Charges\": true},\n      {\"Average Total Payments\": true},\n      {\"Average Medicare Payments\": true}];\n  }\n\n  gridData : any[];\n\n  CheckValue(fieldName : string){\n    if (fieldName == 'minDischarges' && isNaN(this.minDischarges))\n      this.minDischarges = null;\n    else if (fieldName == 'maxDischarges' && isNaN(this.maxDischarges))\n    this.maxDischarges = null;\n    else if (fieldName == 'minAvgCoveredCharges' && isNaN(this.minAvgCoveredCharges))\n    this.minAvgCoveredCharges = null;\n    else if (fieldName == 'maxAvgCoveredCharges' && isNaN(this.maxAvgCoveredCharges))\n    this.maxAvgCoveredCharges = null;\n    else if (fieldName == 'minAvgMedicarePayments' && isNaN(this.minAvgMedicarePayments))\n    this.minAvgMedicarePayments = null;\n    else if (fieldName == 'maxAvgMedicarePayments' && isNaN(this.maxAvgMedicarePayments))\n    this.maxAvgMedicarePayments = null;\n  }\n\n  Logout(){\n    this.isAuthenticated = false;\n    this.userName = \"\";\n    this.userPassword = \"\";\n  }\n\n  Login(){\n    try{\n    this._loginService.validateUser(this.userName,this.userPassword).subscribe(\n      res => {\n        this.userData = res;\n        if(this.userData.length > 0)\n        {\n          this.isAuthenticated = true;\n        }\n        else{\n          this.isAuthenticated = false;\n          alert(\"Please enter valid credentials!\");\n        }\n      }\n    );\n  }\n  catch(error){\n    console.error();\n  }\n  }\n\n  ResetClick(){\n    this.minDischarges = null;\n    this.maxDischarges = null;\n    this.minAvgCoveredCharges = null;\n    this.maxAvgCoveredCharges = null;\n    this.minAvgMedicarePayments = null;\n    this.maxAvgMedicarePayments = null;\n    this.state = null;\n    this.gridData = [];\n  }\n\n  SearchClick(){\n    if(this.userData.length > 0)\n    {\n      this.isResultsLoaded = false;\n      this._providerDataService.getProviderData(this.minDischarges,this.maxDischarges,this.minAvgCoveredCharges\n      ,this.maxAvgCoveredCharges,this.minAvgMedicarePayments,this.maxAvgMedicarePayments,this.state)\n      .subscribe((Patientdata) => {\n        this.isResultsLoaded = true;\n        this.providerDataAll = Patientdata;\n        this.gridData = this.providerDataAll.slice(0,this.gridPageSize);\n        this.currentPage = 1;\n\n        var totalPages : number = this.providerDataAll.length / this.gridPageSize;\n        var leftRec : number = this.providerDataAll.length%this.gridPageSize;\n        if (leftRec > 0)\n          this.lastPage = ((this.providerDataAll.length - leftRec)/this.gridPageSize) + 1;\n        else\n          this.lastPage = totalPages;\n      });\n    }\n    else\n    {\n      this.isAuthenticated = false;\n      alert(\"Please login again!\");\n    }\n\n  }\n\n  PageLinkClick(event:string){\n    \n    if (event == \"last\")\n    {\n      this.currentPage = this.lastPage;\n      this.gridData = this.providerDataAll.slice((this.currentPage-1)*this.gridPageSize ,  this.providerDataAll.length)\n    }\n    else\n    {\n      if (event == \"next\" && this.currentPage < this.lastPage)\n      {\n        this.currentPage = this.currentPage + 1;\n      }\n      else if (event == \"prev\" && this.currentPage > 1)\n      {\n        this.currentPage = this.currentPage - 1;\n      }\n      else if (event == \"first\")\n      {\n        this.currentPage = 1;\n      }\n      this.gridData = this.providerDataAll.slice((this.currentPage-1)*this.gridPageSize ,  (this.currentPage)*this.gridPageSize)  \n    }\n }\n\n CheckboxSelection(item : string)\n {\n    var index = this.displayColumns.findIndex(obj => obj.Key == item);\n    if(index <= -1)\n      this.displayColumns.push({\"DisplayName\":item,\"Key\":item});\n    else\n    {\n      this.displayColumns.splice(index,1);\n    } \n }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/BainCodeChallenge/Code/ProviderData/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ProviderDataService } from './provider-data.service';\nimport { LoginService } from './login.service';\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [ProviderDataService, LoginService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/BainCodeChallenge/Code/ProviderData/src/app/app.module.ts","\nimport {HttpClient, HttpHeaders, HttpResponse, HttpParams} from '@angular/common/http'\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable'\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { error } from 'util';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class LoginService {\n  apiRoot = environment.apiUrl;\n  constructor(private http:HttpClient) { }\n\n  validateUser(userName:string, userPassword:string){\n    let url = this.apiRoot+'/api/ProviderData/Login';\n    let params = new HttpParams();\n    params = params.append(\"user_name\" , userName);\n    params = params.append(\"user_password\" , userPassword);\n    try{\n      return this.http.get<any>(url, {params:params});\n    }\n    catch(error){\n      console.error(\"Error in Validating User\");\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/BainCodeChallenge/Code/ProviderData/src/app/login.service.ts","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse, HttpParams} from '@angular/common/http'\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport {ProviderData} from './provider-data';\nimport { environment } from '../environments/environment';\n\n\n\n@Injectable()\nexport class ProviderDataService {\n  apiRoot: string = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n\n  getProviderData(minDischarges : string, maxDischarges : string, minAvgCoveredCharges : string, \n    maxAvgCoveredCharges : string, minAvgMedicarePayments : string, maxAvgMedicarePayments : string,\n    state : string) {  \n    let url = this.apiRoot+'/api/ProviderData/Get';\n    let search :string = '?';\n    let params = new HttpParams();\n    params = params.append(\"max_discharges\" , maxDischarges);\n    params = params.append(\"min_discharges\" , minDischarges);\n    params = params.append(\"max_average_covered_charges\" , maxAvgCoveredCharges);\n    params = params.append(\"min_average_covered_charges\" , minAvgCoveredCharges);\n    params = params.append(\"max_average_medicare_payments\" , maxAvgMedicarePayments);\n    params = params.append(\"min_average_medicare_payments\" , minAvgMedicarePayments);\n    params = params.append(\"state\" , state);\n    try{\n      return this.http.get<any>(url, {params:params});\n    }\n    catch(error){\n      console.error(\"Error in Fetching Provider Details\");\n    }   \n  }\n\n  private handleError (error: Response | any) {\n    console.error('PatientdataService::handleError', error);\n    return Observable.throw(error);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/BainCodeChallenge/Code/ProviderData/src/app/provider-data.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:\"http://healthcareproviderservices20180117120432.azurewebsites.net\",\n  pageSize: \"20\"\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/BainCodeChallenge/Code/ProviderData/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/BainCodeChallenge/Code/ProviderData/src/main.ts"],"sourceRoot":"webpack:///"}